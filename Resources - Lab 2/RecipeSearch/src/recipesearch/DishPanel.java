/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package recipesearch;
import java.util.List;
import javax.swing.*;
import se.chalmers.ait.dat215.lab2.*;

/**
 *
 * @author Kuxe
 */
public class DishPanel extends javax.swing.JPanel{
    
	/**
	 * Creates new form DishPanel
	 * @param recipe
	 * Displays the recipe in this DishPanel
	 */
    public DishPanel(Recipe recipe, ISetMainView mainView) {
		this(mainView);
		setRecipe(recipe);
	}
	public DishPanel(ISetMainView mainView){
		this.mainView = mainView;
		initComponents();
	}

	public void setRecipe(Recipe recipe){
		setImage(recipe.getImage(105, 105));

		ImageIcon icon = null;
		switch(recipe.getMainIngredient()){
			case "Kött":
				icon = new javax.swing.ImageIcon(getClass().getResource("/recipesearch/resources/meat_icon.png"));
				break;
			case "Vegetarisk":
				icon = new javax.swing.ImageIcon(getClass().getResource("/recipesearch/resources/tree_icon.png"));
				break;
			case "Kyckling":
				icon = new javax.swing.ImageIcon(getClass().getResource("/recipesearch/resources/Chicken_icon.png"));
				break;
			case "Fisk":
				icon = new javax.swing.ImageIcon(getClass().getResource("/recipesearch/resources/fish_icon.png"));
				break;

			default:
				new javax.swing.ImageIcon(getClass().getResource("/recipesearch/resources/no_choice.png"));
		}

		setTypeIcon(icon);
		setType(recipe.getMainIngredient());
		setServings(recipe.getServings());
		setCuisine(recipe.getCuisine());
		setDifficulty(recipe.getDifficulty());
		setMatch(recipe.getMatch());
		setPrice(recipe.getPrice());
		setTime(recipe.getTime());
		setName(recipe.getName());
		setIngredients(recipe.getIngredients());
		setDescription(recipe.getDescription());
	}
	/** Setters used to change different components in view **/
	public void setImage(ImageIcon image){
		dishImage.setIcon(image);
	}
	public void setTypeIcon(ImageIcon image){
		dishTypeIcon.setIcon(image);
	}
	public void setType(String string){
		dishtypeLabel.setText(string);
	}
	public void setServings(int quantity){
		servingsDataLabel.setText("" + quantity + "st");
	}
	public void setCuisine(String cuisine){
		cuisineDataLabel.setText(cuisine);
	}
	public void setDifficulty(String difficulty){
		difficultyDataLabel.setText(difficulty);
	}
	public void setMatch(int procent){
		matchDataLabel.setText("" + procent + "%");
	}
	public void setPrice(int price){
		priceDataLabel.setText("" + price + "kr");
	}
	public void setTime(int time){
		timeDataLabel.setText("" + time + "m");
	}
	public void setName(String name){
		dishNameLabel.setText(name);
	}
	public void setIngredients(List<Ingredient> ingredients){
		String ingredientsText = "";
		for(Ingredient ingredient : ingredients){
			ingredientsText += ingredient.getName() + ": " + ingredient.getAmount()
					+ ingredient.getUnit() + "\n";
		}
		ingredientsTextArea.setText(ingredientsText);
	}
	public void setDescription(String string){
		descriptionTextArea.setText(string);
	}


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dishScrollPane = new javax.swing.JScrollPane();
        scrollablePanel = new javax.swing.JPanel();
        dishNameLabel = new javax.swing.JLabel();
        ingredientsDescriptionSplitPanel = new javax.swing.JSplitPane();
        ingredientsScrollPanelSplit = new javax.swing.JScrollPane();
        ingredientsTextArea = new javax.swing.JTextArea();
        descriptionScrollPanelSplit = new javax.swing.JScrollPane();
        descriptionTextArea = new javax.swing.JTextArea();
        MiscInfoPanel = new javax.swing.JPanel();
        dishtypeLabel = new javax.swing.JLabel();
        dishInfoPanel = new javax.swing.JPanel();
        servingsLabel = new javax.swing.JLabel();
        cuisineLabel = new javax.swing.JLabel();
        difficultyLabel = new javax.swing.JLabel();
        priceLabel = new javax.swing.JLabel();
        timeLabel = new javax.swing.JLabel();
        servingsDataLabel = new javax.swing.JLabel();
        cuisineDataLabel = new javax.swing.JLabel();
        difficultyDataLabel = new javax.swing.JLabel();
        priceDataLabel = new javax.swing.JLabel();
        timeDataLabel = new javax.swing.JLabel();
        dishImage = new javax.swing.JLabel();
        dishTypeIcon = new javax.swing.JLabel();
        matchLabel = new javax.swing.JLabel();
        matchDataLabel = new javax.swing.JLabel();
        ExpandButton = new javax.swing.JToggleButton();

        setAutoscrolls(true);

        dishScrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        dishNameLabel.setText("<name>");

        ingredientsDescriptionSplitPanel.setBorder(null);

        ingredientsScrollPanelSplit.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        ingredientsScrollPanelSplit.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        ingredientsTextArea.setEditable(false);
        ingredientsTextArea.setColumns(20);
        ingredientsTextArea.setFont(new java.awt.Font("Calibri", 0, 13)); // NOI18N
        ingredientsTextArea.setLineWrap(true);
        ingredientsTextArea.setRows(5);
        ingredientsTextArea.setText("3st Majs\n5st Lingon\n8st grön\nEn juice");
        ingredientsTextArea.setBorder(null);
        ingredientsTextArea.setMaximumSize(new java.awt.Dimension(4, 300));
        ingredientsTextArea.setMinimumSize(new java.awt.Dimension(4, 200));
        ingredientsScrollPanelSplit.setViewportView(ingredientsTextArea);

        ingredientsDescriptionSplitPanel.setLeftComponent(ingredientsScrollPanelSplit);

        descriptionScrollPanelSplit.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        descriptionScrollPanelSplit.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        descriptionTextArea.setEditable(false);
        descriptionTextArea.setColumns(20);
        descriptionTextArea.setFont(new java.awt.Font("Calibri", 0, 13)); // NOI18N
        descriptionTextArea.setLineWrap(true);
        descriptionTextArea.setRows(5);
        descriptionTextArea.setText("Beskrivning ej tillänglig");
        descriptionTextArea.setToolTipText("Recipe description");
        descriptionTextArea.setAutoscrolls(false);
        descriptionTextArea.setBorder(null);
        descriptionScrollPanelSplit.setViewportView(descriptionTextArea);

        ingredientsDescriptionSplitPanel.setRightComponent(descriptionScrollPanelSplit);

        dishtypeLabel.setText("<dishtype>");

        dishInfoPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        servingsLabel.setText("Servings");

        cuisineLabel.setText("Cuisine");

        difficultyLabel.setText("Difficulty");

        priceLabel.setText("Price");

        timeLabel.setText("Time");

        servingsDataLabel.setText("5st");

        cuisineDataLabel.setText("Svenskt");

        difficultyDataLabel.setText("Lätt");

        priceDataLabel.setText("35kr");

        timeDataLabel.setText("25m");

        javax.swing.GroupLayout dishInfoPanelLayout = new javax.swing.GroupLayout(dishInfoPanel);
        dishInfoPanel.setLayout(dishInfoPanelLayout);
        dishInfoPanelLayout.setHorizontalGroup(
            dishInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dishInfoPanelLayout.createSequentialGroup()
                .addGroup(dishInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cuisineLabel)
                    .addGroup(dishInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(difficultyLabel)
                        .addComponent(priceLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(timeLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addComponent(servingsLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dishInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(servingsDataLabel)
                    .addComponent(cuisineDataLabel)
                    .addComponent(difficultyDataLabel)
                    .addComponent(priceDataLabel)
                    .addComponent(timeDataLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        dishInfoPanelLayout.setVerticalGroup(
            dishInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dishInfoPanelLayout.createSequentialGroup()
                .addGroup(dishInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(servingsLabel)
                    .addComponent(servingsDataLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dishInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cuisineLabel)
                    .addComponent(cuisineDataLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dishInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(difficultyLabel)
                    .addComponent(difficultyDataLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dishInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(priceLabel)
                    .addComponent(priceDataLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dishInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(timeLabel)
                    .addComponent(timeDataLabel)))
        );

        dishImage.setText("DISH IMAGE MISSING");

        dishTypeIcon.setText("DISH ICON MISSING");
        dishTypeIcon.setMaximumSize(new java.awt.Dimension(48, 48));
        dishTypeIcon.setMinimumSize(new java.awt.Dimension(48, 48));
        dishTypeIcon.setPreferredSize(new java.awt.Dimension(48, 48));

        javax.swing.GroupLayout MiscInfoPanelLayout = new javax.swing.GroupLayout(MiscInfoPanel);
        MiscInfoPanel.setLayout(MiscInfoPanelLayout);
        MiscInfoPanelLayout.setHorizontalGroup(
            MiscInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MiscInfoPanelLayout.createSequentialGroup()
                .addGroup(MiscInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dishInfoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(MiscInfoPanelLayout.createSequentialGroup()
                        .addGroup(MiscInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(MiscInfoPanelLayout.createSequentialGroup()
                                .addComponent(dishTypeIcon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dishtypeLabel))
                            .addComponent(dishImage, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        MiscInfoPanelLayout.setVerticalGroup(
            MiscInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MiscInfoPanelLayout.createSequentialGroup()
                .addComponent(dishImage, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(MiscInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(dishtypeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dishTypeIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(dishInfoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(94, Short.MAX_VALUE))
        );

        matchLabel.setText("Match");

        matchDataLabel.setText("75%");

        javax.swing.GroupLayout scrollablePanelLayout = new javax.swing.GroupLayout(scrollablePanel);
        scrollablePanel.setLayout(scrollablePanelLayout);
        scrollablePanelLayout.setHorizontalGroup(
            scrollablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(scrollablePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(MiscInfoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(scrollablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ingredientsDescriptionSplitPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(scrollablePanelLayout.createSequentialGroup()
                        .addComponent(dishNameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 163, Short.MAX_VALUE)
                        .addComponent(matchLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(matchDataLabel)
                        .addContainerGap())))
        );
        scrollablePanelLayout.setVerticalGroup(
            scrollablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(scrollablePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(scrollablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(scrollablePanelLayout.createSequentialGroup()
                        .addGroup(scrollablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dishNameLabel)
                            .addComponent(matchLabel)
                            .addComponent(matchDataLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ingredientsDescriptionSplitPanel))
                    .addComponent(MiscInfoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        dishScrollPane.setViewportView(scrollablePanel);

        ExpandButton.setText("Utöka recept");
        ExpandButton.setToolTipText("Tryck här för att se den detaljerade vyn av receptet");
        ExpandButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExpandButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ExpandButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(dishScrollPane)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(dishScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ExpandButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ExpandButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExpandButtonActionPerformed
        JToggleButton btn = (JToggleButton)evt.getSource();

		//If maximized
		if(btn.isSelected()){
			btn.setText("Minimera recept");

			//Enable scrolling in horizontal and vertical direction when maximized 
			dishScrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED);
			descriptionScrollPanelSplit.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED);
			ingredientsScrollPanelSplit.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED);

			dishScrollPane.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_AS_NEEDED);
			descriptionScrollPanelSplit.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_AS_NEEDED);
			ingredientsScrollPanelSplit.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_AS_NEEDED);
			
			mainView.replaceListWithRecipe(this, true);
		} else {
		//Else if minimized
			btn.setText("Utöka recept");


			//Scrollback textfields
			descriptionTextArea.setCaretPosition(0);
			ingredientsTextArea.setCaretPosition(0);

			//Reset scrollbars to 0, default location
			dishScrollPane.getHorizontalScrollBar().setValue(0);
			dishScrollPane.getVerticalScrollBar().setValue(0);
			descriptionScrollPanelSplit.getHorizontalScrollBar().setValue(0);
			descriptionScrollPanelSplit.getVerticalScrollBar().setValue(0);
			ingredientsScrollPanelSplit.getHorizontalScrollBar().setValue(0);
			ingredientsScrollPanelSplit.getVerticalScrollBar().setValue(0);

			//Disable scrolling in horizontal and vertical direction when minimized
			dishScrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
			descriptionScrollPanelSplit.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
			ingredientsScrollPanelSplit.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
			dishScrollPane.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
			descriptionScrollPanelSplit.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
			ingredientsScrollPanelSplit.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
			
			mainView.replaceListWithRecipe(this, false);
		}
    }//GEN-LAST:event_ExpandButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton ExpandButton;
    private javax.swing.JPanel MiscInfoPanel;
    private javax.swing.JLabel cuisineDataLabel;
    private javax.swing.JLabel cuisineLabel;
    private javax.swing.JScrollPane descriptionScrollPanelSplit;
    private javax.swing.JTextArea descriptionTextArea;
    private javax.swing.JLabel difficultyDataLabel;
    private javax.swing.JLabel difficultyLabel;
    private javax.swing.JLabel dishImage;
    private javax.swing.JPanel dishInfoPanel;
    private javax.swing.JLabel dishNameLabel;
    private javax.swing.JScrollPane dishScrollPane;
    private javax.swing.JLabel dishTypeIcon;
    private javax.swing.JLabel dishtypeLabel;
    private javax.swing.JSplitPane ingredientsDescriptionSplitPanel;
    private javax.swing.JScrollPane ingredientsScrollPanelSplit;
    private javax.swing.JTextArea ingredientsTextArea;
    private javax.swing.JLabel matchDataLabel;
    private javax.swing.JLabel matchLabel;
    private javax.swing.JLabel priceDataLabel;
    private javax.swing.JLabel priceLabel;
    private javax.swing.JPanel scrollablePanel;
    private javax.swing.JLabel servingsDataLabel;
    private javax.swing.JLabel servingsLabel;
    private javax.swing.JLabel timeDataLabel;
    private javax.swing.JLabel timeLabel;
    // End of variables declaration//GEN-END:variables
	private final ISetMainView mainView;
}